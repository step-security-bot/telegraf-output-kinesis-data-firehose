---
name: Verify

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  GO111MODULE: "on"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Plugin
    strategy:
      max-parallel: 4
      matrix:
        go-version: [ 1.23.x ]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Build
        run: make build

  lint:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    runs-on: ubuntu-latest
    name: Lint Plugin
    strategy:
      max-parallel: 4
      matrix:
        go-version: [ 1.23.x ]
        golangci-lint-version: [v1.60.3]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Lint
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          version: '${{ matrix.golangci-lint-version }}'
          args: -c .golangci.yml
          skip-cache: true
          skip-save-cache: true

  tests:
    permissions:
      checks: write  # for shogo82148/actions-goveralls to create a new check based on the results
      contents: read  # for actions/checkout to fetch code
    runs-on: ubuntu-latest
    name: Run Tests
    strategy:
      matrix:
        go-version: [ 1.23.x ]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Run Tests
        run: make test
        
      - name: Coveralls
        uses: shogo82148/actions-goveralls@785c9d68212c91196d3994652647f8721918ba11 # v1.9.0
        with:
          path-to-profile: coverage.out

  snyk:
    runs-on: ubuntu-latest
    name: Snyk Scanning
    permissions:
      contents: read
      actions: read
      security-events: write
      statuses: write
      id-token: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c # v3.0.0
        id: import-secrets
        with:
          method: jwt
          url: ${{ secrets.VAULT_ADDR }}
          path: ${{ secrets.VAULT_PATH }}
          role: ${{ secrets.VAULT_ROLE }}
          secrets: |
            github-telegraf-output-kinesis-data-firehose/data/snyk token | SNYK_TOKEN

      - name: Snyk Monitor
        uses: snyk/actions/golang@cdb760004ba9ea4d525f2e043745dfe85bb9077e # master
        continue-on-error: true
        with:
          command: monitor

      - name: Snyk Test
        uses: snyk/actions/golang@cdb760004ba9ea4d525f2e043745dfe85bb9077e # master
        with:
          args: --severity-threshold=medium --fail-on=all --sarif-file-output=snyk.sarif

      - name: Upload Snyk Result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@662472033e021d55d94146f66f6058822b0b39fd # v3.27.0
        with:
          sarif_file: snyk.sarif
